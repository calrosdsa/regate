version: '3'

services:
  
  admin:
    image: jmiranda0521/regate-admin:2.4
    container_name: admin
    restart: unless-stopped
    # volumes:
    #   - ./regate-admin/.env:/my-space/.env
    ports:
      - "3000:3000"
    networks:
      # - frontnet  
      - backnet 
  core-admin:
    image: jmiranda0521/core-admin:1.3
    container_name: core-admin
    restart: unless-stopped
    # volumes:
    #   - ./regate-admin/.env:/my-space/.env
    ports:
      - "3001:3000"
    networks:
      # - frontnet  
      - backnet 
  regate:
    container_name: regate
    image: jmiranda0521/r_backend:1.8
    restart: unless-stopped
    ports:
      - "90:90"
      - "2112:2112"
    volumes:
    - ./config/config.json:/app/config.json  
    - ./app/log:/app/log  
    - ./app/email-templates:/app/email-templates
    - ./app/.bin:/app/.bin
    networks:
      - backnet  
  core:
    container_name: core
    image: jmiranda0521/r_core:1.0
    restart: unless-stopped
    ports:
      - "91:8000"
    volumes:
    - ./config/config.json:/app/config.json  
    - ./app/log:/app/log  
    networks:
      - backnet  
  
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"
      - '6831:6831'
      - "4317:4317"
      - "4318:4318"
    environment:
      - LOG_LEVEL=debug
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - backnet  
      # - frontnet
    
  

    # networks:
      # - jaeger-example
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro    
    networks:
      - backnet  
   
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitor/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # - ./monitor/prometheus/rules.yml:/etc/prometheus/rules.yml

    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9090 || exit
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backnet  

   
 

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - backnet  
   
  
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3030:3030"
    restart: unless-stopped   
    volumes:
      - ./monitor/grafana/grafana.ini:/etc/grafana/grafana.ini 
      - ./monitor/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana-data:/var/lib/grafana
    networks:
      - backnet  
 

  dme:
    image: quaide/dem
    volumes:
      - ./monitor/dme/conf.yml:/app/conf.yml    
      - /var/run/docker.sock:/var/run/docker.sock
  

  # nginx:
    # image: nginx:mainline-alpine
    # container_name: nginx
    # restart: unless-stopped
    # ports:
      # - "3000:3000"
    # volumes:
      # - web-root:/var/www/html
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - certbot-etc:/etc/letsencrypt
      # - certbot-var:/var/lib/letsencrypt
    # depends_on:
      # - admin
    # networks:
      # - backnet
      # - frontnet

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - nginx
  #   command: certonly --webroot --webroot-path=/var/www/html --email sammy@your_domain --agree-tos --no-eff-email --staging -d your_domain  -d www.your_domain 
  

volumes:
  grafana-data:
  # certbot-etc:
  # certbot-var:
  # web-root:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: /home/sammy/node_project/views/
  #     o: bind
  # prometheus-data:
  # alertmanager-data:


networks:
  backnet:
  # frontnet:
  # external:
    # driver: host
    # external: true  
    # external: true

# docker run --name jaeger -e COLLECTOR_OTLP_ENABLED=true -p 16686:16686 -p 4317:4317 -p 4318:4318 jaegertracing/all-in-one:1.35